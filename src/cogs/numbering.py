# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –∫–æ–º–∞–Ω–¥ –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
"""

import discord
from discord.ext import commands
from discord import app_commands
import random
import re
from typing import List, Optional
import logging

from ..utils.permissions import requires_host_permission
from ..utils.logger import get_logger

logger = get_logger(__name__)


class NumberingCog(commands.Cog, name="–ù—É–º–µ—Ä–∞—Ü–∏—è"):
    """–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö"""
    
    def __init__(self, bot):
        self.bot = bot
        self.active_sessions = {}  # guild_id: session_id
        
    def remove_numbers(self, nickname: str) -> str:
        """
        –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ –Ω–∏–∫–Ω–µ–π–º–∞
        
        Args:
            nickname: –ù–∏–∫–Ω–µ–π–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
        Returns:
            –û—á–∏—â–µ–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º
        """
        for pattern in self.bot.config.number_formats:
            nickname = re.sub(pattern, '', nickname)
        return nickname.strip()
        
    @commands.command(name="number", aliases=["–Ω–æ–º–µ—Ä–∞", "num"])
    @requires_host_permission()
    async def number_participants(self, ctx: commands.Context):
        """
        –ü—Ä–∏—Å–≤–æ–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !number
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        if not ctx.author.voice:
            await ctx.send("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
            return
            
        voice_channel = ctx.author.voice.channel
        
        # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–∏—Å–∫–ª—é—á–∞—è –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã)
        members = [m for m in voice_channel.members if m != ctx.author]
        
        if not members:
            await ctx.send("‚ùå –í –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏!")
            return
            
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        await self.bot.db.log_action(
            ctx.guild.id, 
            ctx.author.id, 
            "number_command", 
            f"–ö–∞–Ω–∞–ª: {voice_channel.name}, –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(members)}"
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–µ–¥—É—â–µ–≥–æ
        host_id = await self.bot.db.add_or_update_host(
            ctx.guild.id, 
            ctx.author.id, 
            ctx.author.display_name
        )
        
        # –ù–∞—á–∏–Ω–∞–µ–º —Å–µ—Å—Å–∏—é
        session_id = await self.bot.db.start_numbering_session(
            ctx.guild.id,
            voice_channel.id,
            host_id,
            len(members)
        )
        self.active_sessions[ctx.guild.id] = session_id
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞
        numbers = list(range(1, len(members) + 1))
        random.shuffle(numbers)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        success_count = 0
        failed_members = []
        results = []
        
        # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä–∞
        for member, number in zip(members, numbers):
            old_nick = member.display_name
            clean_nick = self.remove_numbers(old_nick)
            new_nick = f"{number:02d}. {clean_nick}"
            
            try:
                await member.edit(nick=new_nick)
                success_count += 1
                results.append(f"‚úÖ {old_nick} ‚Üí **{new_nick}**")
                logger.info(f"–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: {old_nick} ‚Üí {new_nick}")
            except discord.Forbidden:
                failed_members.append((member, new_nick))
                results.append(f"‚ùå {old_nick} ‚Üí **{new_nick}** *(–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤)*")
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å {member.name}: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
            except Exception as e:
                failed_members.append((member, new_nick))
                results.append(f"‚ùå {old_nick} ‚Üí **{new_nick}** *(–æ—à–∏–±–∫–∞)*")
                logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è {member.name}: {e}")
                
        # –°–æ–∑–¥–∞—ë–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        embed = discord.Embed(
            title="üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω—É–º–µ—Ä–∞—Ü–∏–∏",
            description=f"–ö–∞–Ω–∞–ª: **{voice_channel.name}**\n"
                       f"–í–µ–¥—É—â–∏–π: {ctx.author.mention}\n"
                       f"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: **{len(members)}**",
            color=discord.Color.green() if not failed_members else discord.Color.orange()
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        if results:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ
            result_text = "\n".join(results[:10])
            if len(results) > 10:
                result_text += f"\n*...–∏ –µ—â—ë {len(results) - 10} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤*"
            embed.add_field(
                name=f"–£—Å–ø–µ—à–Ω–æ: {success_count}/{len(members)}",
                value=result_text,
                inline=False
            )
            
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
        if failed_members:
            failed_text = []
            for member, new_nick in failed_members[:5]:
                failed_text.append(f"‚Ä¢ {member.mention} ‚Üí **{new_nick}**")
            if len(failed_members) > 5:
                failed_text.append(f"*...–∏ –µ—â—ë {len(failed_members) - 5} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤*")
                
            embed.add_field(
                name="‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:",
                value="\n".join(failed_text),
                inline=False
            )
            
        embed.set_footer(text=f"–°–µ—Å—Å–∏—è #{session_id}")
        
        await ctx.send(embed=embed)
        
    @commands.command(name="clear", aliases=["–æ—á–∏—Å—Ç–∏—Ç—å", "—É–¥–∞–ª–∏—Ç—å"])
    @requires_host_permission()
    async def clear_numbers(self, ctx: commands.Context):
        """
        –£–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä–∞ –∏–∑ –Ω–∏–∫–Ω–µ–π–º–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !clear
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        if not ctx.author.voice:
            await ctx.send("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
            return
            
        voice_channel = ctx.author.voice.channel
        members = voice_channel.members
        
        # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        await self.bot.db.log_action(
            ctx.guild.id, 
            ctx.author.id, 
            "clear_command", 
            f"–ö–∞–Ω–∞–ª: {voice_channel.name}"
        )
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
        if ctx.guild.id in self.active_sessions:
            await self.bot.db.end_numbering_session(self.active_sessions[ctx.guild.id])
            del self.active_sessions[ctx.guild.id]
            
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
        success_count = 0
        changed_count = 0
        
        for member in members:
            old_nick = member.display_name
            new_nick = self.remove_numbers(old_nick)
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            if old_nick == new_nick:
                continue
                
            changed_count += 1
            
            try:
                await member.edit(nick=new_nick if new_nick else member.name)
                success_count += 1
                logger.info(f"–û—á–∏—â–µ–Ω –Ω–∏–∫–Ω–µ–π–º: {old_nick} ‚Üí {new_nick}")
            except discord.Forbidden:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º {member.name}: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–∏–∫–Ω–µ–π–º–∞ {member.name}: {e}")
                
        # –°–æ–∑–¥–∞—ë–º embed —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        embed = discord.Embed(
            title="üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–æ–º–µ—Ä–æ–≤",
            description=f"–ö–∞–Ω–∞–ª: **{voice_channel.name}**",
            color=discord.Color.green() if success_count == changed_count else discord.Color.orange()
        )
        
        embed.add_field(
            name="–†–µ–∑—É–ª—å—Ç–∞—Ç",
            value=f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: **{len(members)}** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n"
                  f"–ò–∑–º–µ–Ω–µ–Ω–æ: **{success_count}/{changed_count}** –Ω–∏–∫–Ω–µ–π–º–æ–≤",
            inline=False
        )
        
        await ctx.send(embed=embed)
        
    @app_commands.command(name="number", description="–ü—Ä–∏—Å–≤–æ–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∫–∞–Ω–∞–ª–∞")
    @app_commands.check(lambda interaction: True)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±—É–¥–µ—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–∞–Ω–¥—ã
    async def slash_number(self, interaction: discord.Interaction):
        """Slash-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏"""
        # –°–æ–∑–¥–∞—ë–º —Ñ–µ–π–∫–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ª–æ–≥–∏–∫–∏
        ctx = await self.bot.get_context(interaction)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        if not await self.bot.permission_system.check_host_permissions(ctx):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
                ephemeral=True
            )
            return
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        await interaction.response.defer()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É
        await self.number_participants(ctx)
        
    @app_commands.command(name="clear", description="–£–¥–∞–ª–∏—Ç—å –Ω–æ–º–µ—Ä–∞ –∏–∑ –Ω–∏–∫–Ω–µ–π–º–æ–≤")
    @app_commands.check(lambda interaction: True)
    async def slash_clear(self, interaction: discord.Interaction):
        """Slash-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–æ–º–µ—Ä–æ–≤"""
        ctx = await self.bot.get_context(interaction)
        
        if not await self.bot.permission_system.check_host_permissions(ctx):
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!",
                ephemeral=True
            )
            return
            
        await interaction.response.defer()
        await self.clear_numbers(ctx)
        
    @commands.command(name="hosts", aliases=["–≤–µ–¥—É—â–∏–µ", "—Ö–æ—Å—Ç—ã"])
    async def list_hosts(self, ctx: commands.Context):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–µ–¥—É—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !hosts
        """
        hosts = await self.bot.db.get_active_hosts(ctx.guild.id)
        
        if not hosts:
            await ctx.send("üìã –ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –≤–µ–¥—É—â–∏—Ö.")
            return
            
        embed = discord.Embed(
            title="üë• –í–µ–¥—É—â–∏–µ —Å–µ—Ä–≤–µ—Ä–∞",
            description=f"–í—Å–µ–≥–æ –≤–µ–¥—É—â–∏—Ö: **{len(hosts)}**",
            color=discord.Color.blue()
        )
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–µ—Å—Å–∏–π
        hosts.sort(key=lambda h: h['sessions_count'], reverse=True)
        
        host_list = []
        for i, host in enumerate(hosts[:10], 1):
            try:
                user = self.bot.get_user(host['user_id'])
                if not user:
                    user = await self.bot.fetch_user(host['user_id'])
                name = user.mention if user else f"ID: {host['user_id']}"
            except:
                name = f"ID: {host['user_id']}"
                
            sessions = host['sessions_count']
            emoji = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}."
            
            host_list.append(
                f"{emoji} {name} - **{sessions}** {'—Å–µ—Å—Å–∏—è' if sessions == 1 else '—Å–µ—Å—Å–∏–π'}"
            )
            
        embed.add_field(
            name="–¢–æ–ø –≤–µ–¥—É—â–∏—Ö",
            value="\n".join(host_list),
            inline=False
        )
        
        await ctx.send(embed=embed)


async def setup(bot):
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è –∫ –±–æ—Ç—É"""
    await bot.add_cog(NumberingCog(bot)) 