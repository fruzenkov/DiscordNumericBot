# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
"""

import discord
from discord.ext import commands
from discord import app_commands
import json
from typing import Optional, Union
import logging

from ..utils.permissions import requires_admin
from ..utils.logger import get_logger

logger = get_logger(__name__)


class AdminCog(commands.Cog, name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"):
    """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º"""
    
    def __init__(self, bot):
        self.bot = bot
        
    @commands.command(name="authorize", aliases=["auth", "–¥–æ–±–∞–≤–∏—Ç—å"])
    @requires_admin()
    async def authorize_user(self, ctx: commands.Context, 
                           member: discord.Member, 
                           role: str = "host"):
        """
        –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !authorize @user [role]
        –†–æ–ª–∏: admin, moderator, host (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        """
        valid_roles = ["admin", "moderator", "host"]
        if role.lower() not in valid_roles:
            await ctx.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Ä–æ–ª—å! –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: {', '.join(valid_roles)}")
            return
            
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        success = await self.bot.permission_system.add_authorized_user(
            ctx.guild.id,
            member.id,
            role.lower(),
            ctx.author.id
        )
        
        if success:
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await self.bot.db.log_action(
                ctx.guild.id,
                ctx.author.id,
                "authorize_user",
                f"–î–æ–±–∞–≤–ª–µ–Ω {member.name} —Å —Ä–æ–ª—å—é {role}"
            )
            
            embed = discord.Embed(
                title="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω",
                description=f"{member.mention} –¥–æ–±–∞–≤–ª–µ–Ω —Å —Ä–æ–ª—å—é **{role}**",
                color=discord.Color.green()
            )
            await ctx.send(embed=embed)
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            
    @commands.command(name="unauthorize", aliases=["unauth", "—É–¥–∞–ª–∏—Ç—å_–∞–≤—Ç–æ—Ä"])
    @requires_admin()
    async def unauthorize_user(self, ctx: commands.Context, member: discord.Member):
        """
        –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !unauthorize @user
        """
        success = await self.bot.permission_system.remove_authorized_user(
            ctx.guild.id,
            member.id
        )
        
        if success:
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            await self.bot.db.log_action(
                ctx.guild.id,
                ctx.author.id,
                "unauthorize_user",
                f"–£–¥–∞–ª—ë–Ω {member.name}"
            )
            
            embed = discord.Embed(
                title="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω",
                description=f"{member.mention} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö",
                color=discord.Color.green()
            )
            await ctx.send(embed=embed)
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            
    @commands.command(name="authorized", aliases=["authlist", "—Å–ø–∏—Å–æ–∫"])
    @requires_admin()
    async def list_authorized(self, ctx: commands.Context):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !authorized
        """
        users = await self.bot.db.get_authorized_users(ctx.guild.id)
        
        if not users:
            await ctx.send("üìã –ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            return
            
        embed = discord.Embed(
            title="üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            description=f"–í—Å–µ–≥–æ: **{len(users)}**",
            color=discord.Color.blue()
        )
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ä–æ–ª—è–º
        by_role = {"admin": [], "moderator": [], "host": []}
        for user in users:
            by_role.get(user['role'], []).append(user)
            
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
        role_names = {"admin": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã", "moderator": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã", "host": "–í–µ–¥—É—â–∏–µ"}
        role_emojis = {"admin": "üëë", "moderator": "üõ°Ô∏è", "host": "üéôÔ∏è"}
        
        for role, role_users in by_role.items():
            if not role_users:
                continue
                
            user_list = []
            for user_data in role_users[:10]:  # –ú–∞–∫—Å–∏–º—É–º 10
                try:
                    user = self.bot.get_user(user_data['user_id'])
                    if not user:
                        user = await self.bot.fetch_user(user_data['user_id'])
                    name = user.mention if user else f"ID: {user_data['user_id']}"
                except:
                    name = f"ID: {user_data['user_id']}"
                    
                user_list.append(f"‚Ä¢ {name}")
                
            if len(role_users) > 10:
                user_list.append(f"*...–∏ –µ—â—ë {len(role_users) - 10}*")
                
            embed.add_field(
                name=f"{role_emojis[role]} {role_names[role]}",
                value="\n".join(user_list),
                inline=True
            )
            
        await ctx.send(embed=embed)
        
    @commands.command(name="setnick", aliases=["setname", "–Ω–∏–∫–Ω–µ–π–º"])
    @requires_admin()
    async def set_required_nickname(self, ctx: commands.Context, *, nickname_part: str):
        """
        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é —á–∞—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !setnick —á–∞—Å—Ç—å_–Ω–∏–∫–Ω–µ–π–º–∞
        """
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = await self.bot.db.get_guild_settings(ctx.guild.id)
        settings['required_nickname'] = nickname_part
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        await self.bot.db.update_guild_settings(ctx.guild.id, settings)
        
        # –õ–æ–≥–∏—Ä—É–µ–º
        await self.bot.db.log_action(
            ctx.guild.id,
            ctx.author.id,
            "set_required_nickname",
            f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {nickname_part}"
        )
        
        embed = discord.Embed(
            title="‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
            description=f"–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å –Ω–∏–∫–Ω–µ–π–º–∞: **{nickname_part}**\n"
                       f"–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º –≤ –Ω–∏–∫–µ —Å–º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    @commands.command(name="removenick", aliases=["delnick", "—É–¥–∞–ª–∏—Ç—å–Ω–∏–∫"])
    @requires_admin()
    async def remove_required_nickname(self, ctx: commands.Context):
        """
        –£–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –Ω–∏–∫–Ω–µ–π–º—É
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !removenick
        """
        settings = await self.bot.db.get_guild_settings(ctx.guild.id)
        if 'required_nickname' in settings:
            del settings['required_nickname']
            await self.bot.db.update_guild_settings(ctx.guild.id, settings)
            
        await ctx.send("‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –Ω–∏–∫–Ω–µ–π–º—É —É–¥–∞–ª–µ–Ω–æ.")
        
    @commands.command(name="setrole", aliases=["—Ä–æ–ª—å"])
    @requires_admin()
    async def add_allowed_role(self, ctx: commands.Context, role: discord.Role):
        """
        –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !setrole @role
        """
        settings = await self.bot.db.get_guild_settings(ctx.guild.id)
        allowed_roles = settings.get('allowed_roles', [])
        
        if role.id in allowed_roles:
            await ctx.send(f"‚ùå –†–æ–ª—å {role.mention} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö!")
            return
            
        allowed_roles.append(role.id)
        settings['allowed_roles'] = allowed_roles
        await self.bot.db.update_guild_settings(ctx.guild.id, settings)
        
        # –õ–æ–≥–∏—Ä—É–µ–º
        await self.bot.db.log_action(
            ctx.guild.id,
            ctx.author.id,
            "add_allowed_role",
            f"–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ä–æ–ª—å: {role.name}"
        )
        
        embed = discord.Embed(
            title="‚úÖ –†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞",
            description=f"–†–æ–ª—å {role.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    @commands.command(name="removerole", aliases=["—É–¥–∞–ª–∏—Ç—å—Ä–æ–ª—å"])
    @requires_admin()
    async def remove_allowed_role(self, ctx: commands.Context, role: discord.Role):
        """
        –£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !removerole @role
        """
        settings = await self.bot.db.get_guild_settings(ctx.guild.id)
        allowed_roles = settings.get('allowed_roles', [])
        
        if role.id not in allowed_roles:
            await ctx.send(f"‚ùå –†–æ–ª—å {role.mention} –Ω–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö!")
            return
            
        allowed_roles.remove(role.id)
        settings['allowed_roles'] = allowed_roles
        await self.bot.db.update_guild_settings(ctx.guild.id, settings)
        
        embed = discord.Embed(
            title="‚úÖ –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞",
            description=f"–†–æ–ª—å {role.mention} –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
        
    @commands.command(name="logs", aliases=["–ª–æ–≥–∏", "–∏—Å—Ç–æ—Ä–∏—è"])
    @requires_admin()
    async def show_logs(self, ctx: commands.Context, limit: int = 20):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !logs [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]
        """
        if limit > 50:
            limit = 50
        elif limit < 1:
            limit = 1
            
        logs = await self.bot.db.get_recent_logs(ctx.guild.id, limit)
        
        if not logs:
            await ctx.send("üìã –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö.")
            return
            
        embed = discord.Embed(
            title="üìú –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π",
            description=f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(logs)} –∑–∞–ø–∏—Å–µ–π",
            color=discord.Color.blue()
        )
        
        log_text = []
        for log in logs[:10]:  # –ú–∞–∫—Å–∏–º—É–º 10 –≤ embed
            try:
                user = self.bot.get_user(log['user_id'])
                if not user:
                    user = await self.bot.fetch_user(log['user_id'])
                username = user.name if user else f"ID:{log['user_id']}"
            except:
                username = f"ID:{log['user_id']}"
                
            timestamp = log['timestamp'].split('.')[0]  # –£–±–∏—Ä–∞–µ–º –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
            action = log['action'].replace('_', ' ').title()
            
            log_text.append(f"`{timestamp}` | **{username}** | {action}")
            if log['details']:
                log_text.append(f"‚Ü≥ {log['details']}")
                
        embed.description = "\n".join(log_text)
        
        if len(logs) > 10:
            embed.set_footer(text=f"–ü–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 10 –∏–∑ {len(logs)} –∑–∞–ø–∏—Å–µ–π")
            
        await ctx.send(embed=embed)
        
    @commands.command(name="stats", aliases=["—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "—Å—Ç–∞—Ç"])
    async def show_stats(self, ctx: commands.Context):
        """
        –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !stats
        """
        stats = await self.bot.db.get_statistics(ctx.guild.id)
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            description=ctx.guild.name,
            color=discord.Color.blue()
        )
        
        embed.add_field(
            name="üìà –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ",
            value=f"–°–µ—Å—Å–∏–π –ø—Ä–æ–≤–µ–¥–µ–Ω–æ: **{stats['total_sessions']}**\n"
                  f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –≤–µ–¥—É—â–∏—Ö: **{stats['active_hosts']}**",
            inline=False
        )
        
        if stats['top_hosts']:
            top_text = []
            for i, host in enumerate(stats['top_hosts'], 1):
                emoji = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}."
                sessions = host['sessions_count']
                top_text.append(
                    f"{emoji} **{host['nickname']}** - {sessions} {'—Å–µ—Å—Å–∏—è' if sessions == 1 else '—Å–µ—Å—Å–∏–π'}"
                )
                
            embed.add_field(
                name="üèÜ –¢–æ–ø –≤–µ–¥—É—â–∏—Ö",
                value="\n".join(top_text),
                inline=False
            )
            
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
        embed.add_field(
            name="‚ÑπÔ∏è –û –±–æ—Ç–µ",
            value=f"–í–µ—Ä—Å–∏—è: **{self.bot.__class__.__module__.split('.')[0]} v2.0**\n"
                  f"–°–µ—Ä–≤–µ—Ä–æ–≤: **{len(self.bot.guilds)}**\n"
                  f"–ü—Ä–µ—Ñ–∏–∫—Å: **{self.bot.config.prefix}**",
            inline=False
        )
        
        await ctx.send(embed=embed)


async def setup(bot):
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥—É–ª—è –∫ –±–æ—Ç—É"""
    await bot.add_cog(AdminCog(bot)) 